// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Repositories.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220502025714_updateFinishDateColoumn")]
    partial class updateFinishDateColoumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Entertainment"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Game"
                        });
                });

            modelBuilder.Entity("Core.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Packages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Student",
                            Price = 8.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Family",
                            Price = 29.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "Duo",
                            Price = 23.99m,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Name = "Level 1",
                            Price = 9.9m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Name = "Level 2",
                            Price = 19.9m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            Name = "Level 3",
                            Price = 29.9m,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            Name = "Standart",
                            Price = 16.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            Name = "Family",
                            Price = 25.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            Name = "Student",
                            Price = 9.99m,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            Name = "Ultimate",
                            Price = 44.9m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            Name = "Console",
                            Price = 29.99m,
                            ProductId = 4
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            Name = "Basic",
                            Price = 37.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            Name = "Standart HD",
                            Price = 57.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 14,
                            Description = "",
                            Name = "Ultra HD",
                            Price = 77.99m,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            Name = "Max",
                            Price = 99.9m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            Name = "Go",
                            Price = 79.9m,
                            ProductId = 6
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            Name = "Prime",
                            Price = 7.9m,
                            ProductId = 7
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            Name = "Standart",
                            Price = 106.99m,
                            ProductId = 8
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            Name = "Individual",
                            Price = 59.99m,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            Name = "Family",
                            Price = 119.99m,
                            ProductId = 9
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            Name = "Study",
                            Price = 203.99m,
                            ProductId = 10
                        },
                        new
                        {
                            Id = 22,
                            Description = "",
                            Name = "Study Pack",
                            Price = 270.99m,
                            ProductId = 10
                        });
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Name = "Spotify"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Twitch"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Youtube"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Name = "Xbox Game Pass"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Name = "Netflix"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Name = "HBO"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Name = "Amazon"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Name = "Psn Plus"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 4,
                            Name = "Nintendo Online"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Name = "Chegg"
                        });
                });

            modelBuilder.Entity("Core.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BillCycle")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<bool>("RemindMe")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserId");

                    b.ToTable("Subscriptions", (string)null);
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Core.Entities.Package", b =>
                {
                    b.HasOne("Core.Entities.Product", "Product")
                        .WithMany("Packages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.HasOne("Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Core.Entities.Subscription", b =>
                {
                    b.HasOne("Core.Entities.Package", "Package")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.User", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Core.Entities.Package", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
